package be.contribute.exceptionhandling.model.viewobjects;

import be.contribute.exceptionhandling.model.entities.RegionsImpl;
import be.contribute.exceptionhandling.model.exceptions.CustomRuntimeException;
import be.contribute.exceptionhandling.model.viewobjects.common.RegionsVORow;

import java.math.BigDecimal;

import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 21 10:33:00 CET 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RegionsVORowImpl
	extends ViewRowImpl
	implements RegionsVORow
{

	public static final int ENTITY_REGIONS = 0;

	public void failOnRegionsVORow()
	{
		throw new CustomRuntimeException("Fail on Regions VO Row");
	}

	/**
	 * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
	 */
	public enum AttributesEnum
	{
		RegionId,
		RegionName;
		static AttributesEnum[] vals = null;
		;
		private static final int firstIndex = 0;

		public int index()
		{
			return AttributesEnum.firstIndex() + ordinal();
		}

		public static final int firstIndex()
		{
			return firstIndex;
		}

		public static int count()
		{
			return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
		}

		public static final AttributesEnum[] staticValues()
		{
			if (vals == null)
			{
				vals = AttributesEnum.values();
			}
			return vals;
		}
	}

	public static final int REGIONID = AttributesEnum.RegionId.index();
	public static final int REGIONNAME = AttributesEnum.RegionName.index();

	/**
	 * This is the default constructor (do not remove).
	 */
	public RegionsVORowImpl()
	{
	}

	/**
	 * Gets Regions entity object.
	 * @return the Regions
	 */
	public RegionsImpl getRegions()
	{
		return (RegionsImpl)getEntity(ENTITY_REGIONS);
	}

	/**
	 * Gets the attribute value for REGION_ID using the alias name RegionId.
	 * @return the REGION_ID
	 */
	public BigDecimal getRegionId()
	{
		return (BigDecimal)getAttributeInternal(REGIONID);
	}

	/**
	 * Sets <code>value</code> as attribute value for REGION_ID using the alias name RegionId.
	 * @param value value to set the REGION_ID
	 */
	public void setRegionId(BigDecimal value)
	{
		setAttributeInternal(REGIONID, value);
	}

	/**
	 * Gets the attribute value for REGION_NAME using the alias name RegionName.
	 * @return the REGION_NAME
	 */
	public String getRegionName()
	{
		return (String)getAttributeInternal(REGIONNAME);
	}

	/**
	 * Sets <code>value</code> as attribute value for REGION_NAME using the alias name RegionName.
	 * @param value value to set the REGION_NAME
	 */
	public void setRegionName(String value)
	{
		setAttributeInternal(REGIONNAME, value);
	}
}

