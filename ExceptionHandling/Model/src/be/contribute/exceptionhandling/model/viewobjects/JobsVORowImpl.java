package be.contribute.exceptionhandling.model.viewobjects;

import be.contribute.exceptionhandling.model.entities.JobsImpl;
import be.contribute.exceptionhandling.model.exceptions.CustomJboException;
import be.contribute.exceptionhandling.model.viewobjects.common.JobsVORow;

import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 21 09:55:37 CET 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JobsVORowImpl
	extends ViewRowImpl
	implements JobsVORow
{


	public static final int ENTITY_JOBS = 0;

	public void failOnJobRow()
	{
		throw new CustomJboException("Failed on JobRow");
	}


	/**
	 * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
	 */
	public enum AttributesEnum
	{
		JobId,
		JobTitle,
		MaxSalary,
		MinSalary;
		static AttributesEnum[] vals = null;
		;
		private static final int firstIndex = 0;

		public int index()
		{
			return JobsVORowImpl.AttributesEnum.firstIndex() + ordinal();
		}

		public static final int firstIndex()
		{
			return firstIndex;
		}

		public static int count()
		{
			return JobsVORowImpl.AttributesEnum.firstIndex() + JobsVORowImpl.AttributesEnum.staticValues().length;
		}

		public static final AttributesEnum[] staticValues()
		{
			if (vals == null)
			{
				vals = JobsVORowImpl.AttributesEnum.values();
			}
			return vals;
		}
	}


	public static final int JOBID = AttributesEnum.JobId.index();
	public static final int JOBTITLE = AttributesEnum.JobTitle.index();
	public static final int MAXSALARY = AttributesEnum.MaxSalary.index();
	public static final int MINSALARY = AttributesEnum.MinSalary.index();

	/**
	 * This is the default constructor (do not remove).
	 */
	public JobsVORowImpl()
	{
	}

	/**
	 * Gets Jobs entity object.
	 * @return the Jobs
	 */
	public JobsImpl getJobs()
	{
		return (JobsImpl)getEntity(ENTITY_JOBS);
	}

	/**
	 * Gets the attribute value for JOB_ID using the alias name JobId.
	 * @return the JOB_ID
	 */
	public String getJobId()
	{
		return (String)getAttributeInternal(JOBID);
	}

	/**
	 * Sets <code>value</code> as attribute value for JOB_ID using the alias name JobId.
	 * @param value value to set the JOB_ID
	 */
	public void setJobId(String value)
	{
		setAttributeInternal(JOBID, value);
	}

	/**
	 * Gets the attribute value for JOB_TITLE using the alias name JobTitle.
	 * @return the JOB_TITLE
	 */
	public String getJobTitle()
	{
		return (String)getAttributeInternal(JOBTITLE);
	}

	/**
	 * Sets <code>value</code> as attribute value for JOB_TITLE using the alias name JobTitle.
	 * @param value value to set the JOB_TITLE
	 */
	public void setJobTitle(String value)
	{
		setAttributeInternal(JOBTITLE, value);
	}

	/**
	 * Gets the attribute value for MAX_SALARY using the alias name MaxSalary.
	 * @return the MAX_SALARY
	 */
	public Integer getMaxSalary()
	{
		return (Integer)getAttributeInternal(MAXSALARY);
	}

	/**
	 * Sets <code>value</code> as attribute value for MAX_SALARY using the alias name MaxSalary.
	 * @param value value to set the MAX_SALARY
	 */
	public void setMaxSalary(Integer value)
	{
		setAttributeInternal(MAXSALARY, value);
	}

	/**
	 * Gets the attribute value for MIN_SALARY using the alias name MinSalary.
	 * @return the MIN_SALARY
	 */
	public Integer getMinSalary()
	{
		return (Integer)getAttributeInternal(MINSALARY);
	}

	/**
	 * Sets <code>value</code> as attribute value for MIN_SALARY using the alias name MinSalary.
	 * @param value value to set the MIN_SALARY
	 */
	public void setMinSalary(Integer value)
	{
		setAttributeInternal(MINSALARY, value);
	}
}

